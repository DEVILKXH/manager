<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manager.mapper.SaleMapper" >
  <resultMap id="BaseResultMap" type="com.manager.entity.Sale" >
    <id column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="CUSTOMER_ID" property="customerId" jdbcType="VARCHAR" />
    <result column="CUS_NAME" property="customerName" jdbcType="VARCHAR" />
    <result column="ITEM_TYPE" property="itemType" jdbcType="VARCHAR" />
    <result column="ITEM_NAME" property="itemName" jdbcType="VARCHAR" />
    <result column="ITEM_TIME" property="itemTime" jdbcType="TIMESTAMP" />
    <result column="ITEM_NUM" property="itemNum" jdbcType="INTEGER" />
    <result column="ITEM_PRICE" property="itemPrice" jdbcType="DECIMAL" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UUID, USER_ID, CUSTOMER_ID, ITEM_TYPE, ITEM_NAME, ITEM_TIME, ITEM_NUM, ITEM_PRICE, 
    REMARK
  </sql>
  
  <sql id="Base_Column_List2" >
    a.UUID, a.USER_ID, a.CUSTOMER_ID, c.CUS_NAME, a.ITEM_TYPE, a.ITEM_NAME, a.ITEM_TIME, a.ITEM_NUM, a.ITEM_PRICE,a.REMARK
  </sql>
  
  <select id="getPage" resultMap="BaseResultMap">
	select <include refid="Base_Column_List2" />
	from SALE a
	LEFT JOIN customer c ON c.UUID = a.CUSTOMER_ID
	<trim prefix="where"  prefixOverrides="and|or">
	  <if test="record.uuid != null" >
        and UUID = #{record.uuid}
      </if>
      <if test="record.userId != null" >
        and USER_ID = #{record.userId}
      </if>
      <if test="record.customerId != null" >
        and CUSTOMER_ID = #{record.customerId}
      </if>
      <if test="record.itemType != null" >
        and ITEM_TYPE = #{record.itemType}
      </if>
      <if test="record.itemName != null" >
        and ITEM_NAME = #{record.itemName}
      </if>
      <if test="record.itemTime != null" >
        and ITEM_TIME = #{record.itemTime}
      </if>
      <if test="record.itemNum != null" >
        and ITEM_NUM = #{record.itemNum}
      </if>
      <if test="record.itemPrice != null" >
        and ITEM_PRICE = #{record.itemPrice}
      </if>
      <if test="record.remark != null" >
        and REMARK = #{record.remark}
      </if>
	</trim>
	limit #{page.start},#{page.end}
  </select>
  
  <select id="getList" resultMap="BaseResultMap">
	select <include refid="Base_Column_List2" />
	from SALE a
	LEFT JOIN customer c ON c.UUID = a.CUSTOMER_ID
	<trim prefix="where"  prefixOverrides="and|or">
	  <if test="record.uuid != null" >
        and UUID = #{record.uuid}
      </if>
      <if test="record.userId != null" >
        and USER_ID = #{record.userId}
      </if>
      <if test="record.customerId != null" >
        and CUSTOMER_ID = #{record.customerId}
      </if>
      <if test="record.itemType != null" >
        and ITEM_TYPE = #{record.itemType}
      </if>
      <if test="record.itemName != null" >
        and ITEM_NAME = #{record.itemName}
      </if>
      <if test="record.itemTime != null" >
        and ITEM_TIME = #{record.itemTime}
      </if>
      <if test="record.itemNum != null" >
        and ITEM_NUM = #{record.itemNum}
      </if>
      <if test="record.itemPrice != null" >
        and ITEM_PRICE = #{record.itemPrice}
      </if>
      <if test="record.remark != null" >
        and REMARK = #{record.remark}
      </if>
	</trim>
  </select>
  
  <select id="count" resultType="java.lang.Integer">
	select count(0)
	from SALE a
	LEFT JOIN customer c ON c.UUID = a.CUSTOMER_ID
	<trim prefix="where"  prefixOverrides="and|or">
	  <if test="record.uuid != null" >
        and UUID = #{record.uuid}
      </if>
      <if test="record.userId != null" >
        and USER_ID = #{record.userId}
      </if>
      <if test="record.customerId != null" >
        and CUSTOMER_ID = #{record.customerId}
      </if>
      <if test="record.itemType != null" >
        and ITEM_TYPE = #{record.itemType}
      </if>
      <if test="record.itemName != null" >
        and ITEM_NAME = #{record.itemName}
      </if>
      <if test="record.itemTime != null" >
        and ITEM_TIME = #{record.itemTime}
      </if>
      <if test="record.itemNum != null" >
        and ITEM_NUM = #{record.itemNum}
      </if>
      <if test="record.itemPrice != null" >
        and ITEM_PRICE = #{record.itemPrice}
      </if>
      <if test="record.remark != null" >
        and REMARK = #{record.remark}
      </if>
	</trim>
  </select>
  
  <select id="getSaleComp" resultMap="BaseResultMap">
  	SELECT a.user_ID,u.user_name,sum(a.item_num) as item_num,sum(a.ITEM_PRICE) as ITEM_PRICE FROM SALE a 
	LEFT JOIN user u on a.user_id = u.uuid
	GROUP BY a.USER_ID ORDER BY ITEM_PRICE
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.manager.entity.SaleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SALE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SALE
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SALE
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.manager.entity.SaleExample" >
    delete from SALE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.manager.entity.Sale" >
    insert into SALE (UUID, USER_ID, CUSTOMER_ID, 
      ITEM_TYPE, ITEM_NAME, ITEM_TIME, 
      ITEM_NUM, ITEM_PRICE, REMARK
      )
    values (#{uuid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, 
      #{itemType,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemTime,jdbcType=TIMESTAMP}, 
      #{itemNum,jdbcType=INTEGER}, #{itemPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.manager.entity.Sale" >
    insert into SALE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="customerId != null" >
        CUSTOMER_ID,
      </if>
      <if test="itemType != null" >
        ITEM_TYPE,
      </if>
      <if test="itemName != null" >
        ITEM_NAME,
      </if>
      <if test="itemTime != null" >
        ITEM_TIME,
      </if>
      <if test="itemNum != null" >
        ITEM_NUM,
      </if>
      <if test="itemPrice != null" >
        ITEM_PRICE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null" >
        #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemTime != null" >
        #{itemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemNum != null" >
        #{itemNum,jdbcType=INTEGER},
      </if>
      <if test="itemPrice != null" >
        #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.manager.entity.SaleExample" resultType="java.lang.Integer" >
    select count(*) from SALE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SALE
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null" >
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemType != null" >
        ITEM_TYPE = #{record.itemType,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null" >
        ITEM_NAME = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemTime != null" >
        ITEM_TIME = #{record.itemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.itemNum != null" >
        ITEM_NUM = #{record.itemNum,jdbcType=INTEGER},
      </if>
      <if test="record.itemPrice != null" >
        ITEM_PRICE = #{record.itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SALE
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      ITEM_TYPE = #{record.itemType,jdbcType=VARCHAR},
      ITEM_NAME = #{record.itemName,jdbcType=VARCHAR},
      ITEM_TIME = #{record.itemTime,jdbcType=TIMESTAMP},
      ITEM_NUM = #{record.itemNum,jdbcType=INTEGER},
      ITEM_PRICE = #{record.itemPrice,jdbcType=DECIMAL},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.manager.entity.Sale" >
    update SALE
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null" >
        ITEM_TYPE = #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        ITEM_NAME = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemTime != null" >
        ITEM_TIME = #{itemTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemNum != null" >
        ITEM_NUM = #{itemNum,jdbcType=INTEGER},
      </if>
      <if test="itemPrice != null" >
        ITEM_PRICE = #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manager.entity.Sale" >
    update SALE
    set USER_ID = #{userId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      ITEM_TYPE = #{itemType,jdbcType=VARCHAR},
      ITEM_NAME = #{itemName,jdbcType=VARCHAR},
      ITEM_TIME = #{itemTime,jdbcType=TIMESTAMP},
      ITEM_NUM = #{itemNum,jdbcType=INTEGER},
      ITEM_PRICE = #{itemPrice,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>