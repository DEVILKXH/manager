<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manager.mapper.ExpanseMapper">
	<resultMap id="BaseResultMap" type="com.manager.entity.Expanse">
		<id column="UUID" property="uuid" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="EXPANSE_REASON" property="expanseReason"
			jdbcType="VARCHAR" />
		<result column="EXPANSE_TIME" property="expanseTime" jdbcType="TIMESTAMP" />
		<result column="EXPANSE_MONEY" property="expanseMoney"
			jdbcType="VARCHAR" />
		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" />
		<result column="DOC_STATUS" property="docStatus" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		UUID, USER_ID, EXPANSE_REASON, EXPANSE_TIME, EXPANSE_MONEY, BANK_ACCOUNT,DOC_STATUS
	</sql>
	
	<sql id="Base_Column_List2">
		a.UUID, a.USER_ID , a.EXPANSE_REASON, a.EXPANSE_TIME, a.EXPANSE_MONEY, a.BANK_ACCOUNT,a.DOC_STATUS
	</sql>
	
	<select id="getPage" resultMap="BaseResultMap">
		select <include refid="Base_Column_List2" />, u.user_Name
		from EXPANSE a
		left join user u on u.uuid = a.USER_ID
		<trim prefix="where"  prefixOverrides="and|or">
			<if test="record.uuid != null">
				and a.UUID = #{record.uuid}
			</if>
			<if test="record.userId!= null">
				and a.USER_ID = #{record.userId}
			</if>
			<if test="record.expanseReason != null">
				and a.record_REASON = #{record.expanseReason}
			</if>
			<if test="record.expanseTime != null">
				and a.EXPANSE_TIME = #{record.expanseTime}
			</if>
			<if test="record.expanseMoney != null">
				and a.EXPANSE_MONEY = #{record.expanseMoney}
			</if>
			<if test="record.bankAccount != null">
				and a.BANK_ACCOUNT = #{record.bankAccount}
			</if>
			<if test="record.docStatus != null">
				and a.doc_status = #{record.docStatus}
			</if>
		</trim>
		limit #{page.start},#{page.end}
	</select>
	
	<select id="getList" resultMap="BaseResultMap">
		select <include refid="Base_Column_List2" />, u.user_Name 
		from EXPANSE a
		left join user u on u.uuid = a.USER_ID
		<trim prefix="where"  prefixOverrides="and|or">
			<if test="record.uuid != null">
				and a.UUID = #{record.uuid}
			</if>
			<if test="record.userId != null">
				and a.USER_ID = #{record.userId}
			</if>
			<if test="record.expanseReason != null">
				and a.record_REASON = #{record.expanseReason}
			</if>
			<if test="record.expanseTime != null">
				and a.EXPANSE_TIME = #{record.expanseTime}
			</if>
			<if test="record.expanseMoney != null">
				and a.EXPANSE_MONEY = #{record.expanseMoney}
			</if>
			<if test="record.bankAccount != null">
				and a.BANK_ACCOUNT = #{record.bankAccount}
			</if>
			<if test="record.docStatus != null">
				and a.doc_status = #{record.docStatus}
			</if>
		</trim>
	</select>
	
	<select id="count" resultType="java.lang.Integer">
		select count(0)
		from EXPANSE a
		left join user u on u.uuid = a.USER_ID
		<trim prefix="where"  prefixOverrides="and|or">
			<if test="record.uuid != null">
				and a.UUID = #{record.uuid}
			</if>
			<if test="record.userId != null">
				and a.USER_ID = #{record.userId}
			</if>
			<if test="record.expanseReason != null">
				and a.record_REASON = #{record.expanseReason}
			</if>
			<if test="record.expanseTime != null">
				and a.EXPANSE_TIME = #{record.expanseTime}
			</if>
			<if test="record.expanseMoney != null">
				and a.EXPANSE_MONEY = #{record.expanseMoney}
			</if>
			<if test="record.bankAccount != null">
				and a.BANK_ACCOUNT = #{record.bankAccount}
			</if>
			<if test="record.docStatus != null">
				and a.doc_status = #{record.docStatus}
			</if>
		</trim>
	</select>
	
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.manager.entity.ExpanseExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from EXPANSE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from EXPANSE
		where UUID = #{uuid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from EXPANSE
		where UUID = #{uuid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.manager.entity.ExpanseExample">
		delete from EXPANSE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.manager.entity.Expanse">
		insert into EXPANSE (UUID, USER_ID, EXPANSE_REASON,
		EXPANSE_TIME, EXPANSE_MONEY, BANK_ACCOUNT,doc_status
		)
		values (#{uuid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{expanseReason,jdbcType=VARCHAR},
		#{expanseTime,jdbcType=TIMESTAMP}, #{expanseMoney,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR},
		#{docStatus,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.manager.entity.Expanse">
		insert into EXPANSE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				UUID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="expanseReason != null">
				EXPANSE_REASON,
			</if>
			<if test="expanseTime != null">
				EXPANSE_TIME,
			</if>
			<if test="expanseMoney != null">
				EXPANSE_MONEY,
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT,
			</if>
			<if test="docStatus != null">
				doc_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				#{uuid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="expanseReason != null">
				#{expanseReason,jdbcType=VARCHAR},
			</if>
			<if test="expanseTime != null">
				#{expanseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="expanseMoney != null">
				#{expanseMoney,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				#{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="docStatus != null">
				#{docStatus},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.manager.entity.ExpanseExample"
		resultType="java.lang.Integer">
		select count(*) from EXPANSE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update EXPANSE
		<set>
			<if test="record.uuid != null">
				UUID = #{record.uuid,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				USER_ID = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.expanseReason != null">
				EXPANSE_REASON = #{record.expanseReason,jdbcType=VARCHAR},
			</if>
			<if test="record.expanseTime != null">
				EXPANSE_TIME = #{record.expanseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.expanseMoney != null">
				EXPANSE_MONEY = #{record.expanseMoney,jdbcType=VARCHAR},
			</if>
			<if test="record.bankAccount != null">
				BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="record.docStatus != null">
				doc_status = #{record.docStatus},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update EXPANSE
		set UUID = #{record.uuid,jdbcType=VARCHAR},
		USER_ID = #{record.userId,jdbcType=VARCHAR},
		EXPANSE_REASON = #{record.expanseReason,jdbcType=VARCHAR},
		EXPANSE_TIME = #{record.expanseTime,jdbcType=TIMESTAMP},
		EXPANSE_MONEY = #{record.expanseMoney,jdbcType=VARCHAR},
		BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
		DOC_STATUS = #{record.docStatus}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.manager.entity.Expanse">
		update EXPANSE
		<set>
			<if test="userName != null">
				USER_ID = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="expanseReason != null">
				EXPANSE_REASON = #{expanseReason,jdbcType=VARCHAR},
			</if>
			<if test="expanseTime != null">
				EXPANSE_TIME = #{expanseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="expanseMoney != null">
				EXPANSE_MONEY = #{expanseMoney,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="docStatus != null">
				DOC_STATUS = #{docStatus,jdbcType=VARCHAR},
			</if>
		</set>
		where UUID = #{uuid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.manager.entity.Expanse">
		update EXPANSE
		set USER_ID = #{userId,jdbcType=VARCHAR},
		EXPANSE_REASON = #{expanseReason,jdbcType=VARCHAR},
		EXPANSE_TIME = #{expanseTime,jdbcType=TIMESTAMP},
		EXPANSE_MONEY = #{expanseMoney,jdbcType=VARCHAR},
		BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
		DOC_STATUS = #{docStatus,jdbcType=VARCHAR}
		where UUID = #{uuid,jdbcType=VARCHAR}
	</update>
</mapper>